{"version":3,"sources":["Title/Title.js","Header/Header.js","Service/Service.js","App.js","reportWebVitals.js","index.js"],"names":["Title","className","Helmet","lang","amp","name","content","charSet","rel","href","Header","classes","title","menuButton","this","props","AppBar","position","root","Toolbar","IconButton","edge","color","aria-label","Typography","variant","Button","Component","withStyles","theme","backgroundColor","withTheme","Service","description","App","state","services","map","service","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QAiBeA,EAdD,WACb,OACO,qBAAKC,UAAU,cAAf,SACI,eAACC,EAAA,EAAD,WACN,sBAAMC,KAAK,KAAKC,KAAG,IACrB,sBAAMC,KAAK,cAAcC,QAAQ,mCACrB,sBAAMC,QAAQ,UACd,6CACA,sBAAMC,IAAI,YAAYC,KAAK,gD,gECDrCC,E,4MACLC,QAAU,CACTC,MAAO,aACPC,WAAY,Q,uDAEH,IACDF,EAAYG,KAAKC,MAAjBJ,QACR,OACC,cAACK,EAAA,EAAD,CAAQC,SAAS,SAAShB,UAAWU,EAAQO,KAA7C,SACE,eAACC,EAAA,EAAD,WACD,cAACC,EAAA,EAAD,CAAYC,KAAK,QAAQC,MAAM,UAAUC,aAAW,OAApD,SACC,cAAC,IAAD,MAED,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,sBACA,cAACC,EAAA,EAAD,CAAQJ,MAAM,UAAd,4B,GAdiBK,aAqBNC,eA3BA,SAAAC,GAAK,MAAK,CACvBX,KAAM,CACJY,gBAAiB,iBAyBa,CAAEC,WAAW,GAAhCH,CAAwClB,GCjBxCsB,G,6KATT,OACE,sBAAK/B,UAAU,UAAf,UACI,6BAAKa,KAAKC,MAAMV,OAChB,4BAAIS,KAAKC,MAAMkB,qB,GALLN,cC2BPO,E,4MAvBXC,MAAQ,CACNC,SAAU,CACd,CAAE/B,KAAM,SAAU4B,YAAa,2BAC/B,CAAE5B,KAAM,YAAa4B,YAAa,qBAClC,CAAE5B,KAAM,mBAAoB4B,YAAa,wB,uDAKrC,OACE,sBAAKhC,UAAU,MAAf,UACA,cAAC,EAAD,IACA,cAAC,EAAD,IAEHa,KAAKqB,MAAL,SAAuBE,KAAI,SAAAC,GACpB,OAAO,cAAC,EAAD,CAASjC,KAAMiC,EAAO,KAAUL,YAAaK,EAAO,wB,GAhBrDX,aCMHY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2fa5ad0f.chunk.js","sourcesContent":["import React from 'react';\nimport {Helmet} from \"react-helmet\";\n\nconst Title = () => {\n\treturn (\n        <div className=\"application\">\n            <Helmet>\n  \t\t\t\t<html lang=\"es\" amp />\n\t\t\t\t<meta name=\"description\" content=\"The MArketplace For Innovation\" />\n                <meta charSet=\"utf-8\" />\n                <title>Prometeo</title>\n                <link rel=\"canonical\" href=\"https://marvalero.github.io/prometeo/\" />\n            </Helmet>\n        </div>\n\t)\n}\n\nexport default Title\n","import { AppBar, Toolbar, Typography, Button, withStyles, IconButton } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport React, { Component } from 'react';\n\nconst styles = theme => ({\n  root: {\n    backgroundColor: \"DarkOrange\"\n  }\n});\n\nclass Header extends Component {\n\tclasses = {\n\t\ttitle: \"PRometeooo\",\n\t\tmenuButton: \"Blah\"\n\t}\n\trender() {\n\t\tconst { classes } = this.props;\n\t\treturn(\n\t\t\t<AppBar position=\"static\" className={classes.root}>\n\t\t\t  <Toolbar>\n\t\t\t\t<IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n\t\t\t\t\t<MenuIcon />\n\t\t\t\t</IconButton>\n\t\t\t\t<Typography variant=\"h6\">Prometeo</Typography>\n\t\t\t\t<Button color=\"inherit\">Login</Button>\n\t\t\t  </Toolbar>\n\t\t\t</AppBar>\n\t\t)\n\t}\n}\n\nexport default withStyles(styles, { withTheme: true })(Header);\n","import React, { Component } from \"react\";\nimport './Service.css';\n\nclass Service extends Component {\n    render() {\n      return (\n        <div className=\"Service\">\n            <h1>{this.props.name}</h1>\n            <p>{this.props.description}</p>\n        </div>\n      )\n    }\n}\n\nexport default Service\n","import React, { Component } from \"react\";\nimport './App.css';\nimport Title from './Title/Title';\nimport Header from './Header/Header';\nimport Service from './Service/Service';\n\nclass App extends Component {\n    state = {\n      services: [\n  { name: \"Tuwalu\", description: \"build yout own branding\" },\n  { name: \"Deliveroo\", description: \"deliver your food\" },\n  { name: \"Google Analytics\", description: \"get your analytics\" }\n      ]\n    }\n\n    render() {\n      return (\n        <div className=\"App\">\n        <Title />\n        <Header />\n\n    {this.state[\"services\"].map(service => {\n            return <Service name={service[\"name\"]} description={service[\"description\"]} />\n\n    })}\n        </div>\n      )\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}